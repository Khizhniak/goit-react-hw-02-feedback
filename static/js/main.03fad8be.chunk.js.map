{"version":3,"sources":["components/Button/Button.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Button/Button.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/App.js","index.js"],"names":["module","exports","Button","nameBtn","onLeaveFeedback","className","styles","button","onClick","type","FeedbackOptions","options","map","key","Statistics","good","neutral","bad","total","positivePercentage","statisticsTitle","Section","title","children","mainTitle","defaultProps","App","state","handleClickButton","setState","Object","values","this","reduce","acc","stat","Math","round","countTotalFeedback","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,gBAAkB,sC,gBCApCD,EAAOC,QAAU,CAAC,UAAY,6B,6LCoBfC,EAjBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzB,OACE,4BACEC,UAAWC,IAAOC,OAClBC,QAAS,kBAAMJ,EAAgBD,IAC/BM,KAAK,UAEJN,ICGQO,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,gBAAZ,OACtBO,EAAQC,KAAI,SAAAT,GAAO,OACjB,kBAAC,EAAD,CAAQU,IAAKV,EAASA,QAASA,EAASC,gBAAiBA,Q,gBCyB9CU,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,wBAAId,UAAWC,IAAOc,iBAAtB,cACCF,EACC,oCACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,kDAAwBC,EAAxB,MAGF,kD,gBCbFE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,wBAAIlB,UAAWC,IAAOkB,WAAYF,GACjCC,IASPF,EAAQI,aAAe,CACrBH,MAAO,yBAGMD,QChBMK,E,4MACnBC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcPW,kBAAoB,SAAAzB,GAClB,EAAK0B,SAAL,eAAiB1B,EAAU,EAAKwB,MAAMxB,GAAW,K,mEAXjD,OAAO2B,OAAOC,OAAOC,KAAKL,OAAOM,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,K,wDAIH,OAAOC,KAAKC,MAAOL,KAAKL,MAAMZ,KAAOiB,KAAKM,qBAAwB,O,+BAO1D,IAAD,EACwBN,KAAKL,MAA5BZ,EADD,EACCA,KAAME,EADP,EACOA,IAAKD,EADZ,EACYA,QACnB,OACE,kBAAC,EAAD,CAASM,MAAM,yBACb,kBAAC,EAAD,CACEX,QAASmB,OAAOS,KAAKP,KAAKL,OAC1BvB,gBAAiB4B,KAAKJ,oBAExB,kBAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKM,qBACZnB,mBAAoBa,KAAKQ,yC,GAnCFC,aCAjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.03fad8be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1SOpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsTitle\":\"Statistics_statisticsTitle__2yjZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"Section_mainTitle__3llXm\"};","import React from 'react';\nimport styles from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ nameBtn, onLeaveFeedback }) => {\n  return (\n    <button\n      className={styles.button}\n      onClick={() => onLeaveFeedback(nameBtn)}\n      type=\"button\"\n    >\n      {nameBtn}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  nameBtn: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map(nameBtn => (\n    <Button key={nameBtn} nameBtn={nameBtn} onLeaveFeedback={onLeaveFeedback} />\n  ));\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <h2 className={styles.statisticsTitle}>Statistics</h2>\n      {total ? (\n        <>\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total: {total}</p>\n          <p>Positive feedbacks: {positivePercentage}%</p>\n        </>\n      ) : (\n        <p>No feedback given</p>\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h1 className={styles.mainTitle}>{title}</h1>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nSection.defaultProps = {\n  title: 'Awesome Section Title',\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Section from './Section/Section';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, stat) => {\n      acc += stat;\n      return acc;\n    }, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  handleClickButton = nameBtn => {\n    this.setState({ [nameBtn]: this.state[nameBtn] + 1 });\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleClickButton}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}